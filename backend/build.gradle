/*
 *
 *  * Copyright (c) Crio.Do 2019. All rights reserved
 *
 */

//////////////////////////////// DO NOT CHANGE THIS FILE //////////////////////////////////

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:1.7.1"
    }
}

subprojects {
    apply plugin: "java-library"
    apply plugin: "idea"
    apply plugin: "pmd"
    apply plugin: "jacoco"
    apply plugin: "com.github.spotbugs"

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    test {
        reports {
            junitXml.enabled = true
            def destinationDirectory = System.getProperty("user.home") + "/.gradle/daemon/$rootProject.name/test-results"
            junitXml.destination = file(destinationDirectory)
            html.enabled = true
        }
        useJUnitPlatform {
        }
        afterSuite { desc, result ->
            if (!desc.parent) {
                println "\nTEST RESULT: ${result.resultType}"
                println "TEST SUMMARY: RAN ${result.testCount} TESTS, " +
                        "${result.successfulTestCount} SUCCEEDED, " +
                        "${result.failedTestCount} FAILED, " +
                        "${result.skippedTestCount} SKIPPED"
            }
        }
    }


    pmd {
        toolVersion = "6.10.0"
        sourceSets = [sourceSets.main]
        ruleSetFiles = files("${rootProject.projectDir}/__CRIO__/ruleset.xml")
        ignoreFailures = true
    }

    spotbugs {
        toolVersion = "3.1.12"
        sourceSets = [sourceSets.main]
    }

    tasks.withType(com.github.spotbugs.SpotBugsTask) {
        reports {
            html.enabled true
            xml.enabled false
        }
    }

    jacoco {
        toolVersion = "0.7.1.201405082137"
        reportsDir = file("$buildDir/customJacocoReportDir")
    }

    task installGitHooks(type: Copy) {
        from new File(rootProject.rootDir, '__CRIO__/pre-push')
        into { new File(rootProject.rootDir, '.git/hooks') }
        fileMode 0777
    }

    build.dependsOn installGitHooks
}

ext {
    springBootVersion = "2.1.4.RELEASE"
    springCoreVersion = "5.0.9.RELEASE"
    junitVersion = "5.3.1"
    junitPlatformLauncherVersion = "1.3.1"
    mockitoVersion = "2.22.0"
    swaggerVersion = "2.9.2"
    lombokVersion = "1.18.4"
    modelMapperVersion = "2.3.2"
}

//////////////////////////////// DO NOT CHANGE THIS FILE //////////////////////////////////
